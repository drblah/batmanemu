[General]
network = Batmanemu

parallel-simulation = false
scheduler-class = "inet::RealTimeScheduler"
sim-time-limit = 3600s

*.numHosts = 10

# turn off everything thats not strictly required
# unused protocols are turned off
*.*.numLoInterfaces = 0
*.*.hasTcp = false
*.*.hasUdp = false
*.*.hasIpv4 = false
*.*.hasIpv6 = false

*.visualizer.interfaceTableVisualizer[0].displayInterfaceTables = true
*.visualizer.mediumVisualizer[0].displayCommunicationRanges = true
*.visualizer.numDataLinkVisualizers = 2
*.visualizer.dataLinkVisualizer[0].displayLinks = true
*.visualizer.dataLinkVisualizer[0].lineColor = "red1"
*.visualizer.dataLinkVisualizer[0].packetFilter = "*ICMPv4*"
*.visualizer.dataLinkVisualizer[1].displayLinks = true
*.visualizer.dataLinkVisualizer[1].lineColor = "darkcyan"
*.visualizer.dataLinkVisualizer[1].packetFilter = "*BAT*"

*.visualizer.mobilityVisualizer[*].displayMovementTrails = true
*.visualizer.mobilityVisualizer[*].trailLength = 100000
*.visualizer.mobilityVisualizer[*].movementTrailLineColor = "green blue"

*.*.wlan[*].mac.fcsMode = "computed"
*.*.wlan[*].radio.transmitter.power = 1mW # reduces communication range to get non-trivial pathes

*.*.mobility.constraintAreaMinX = 0m
*.*.mobility.constraintAreaMinY = 0m
*.*.mobility.constraintAreaMinZ = 0m
*.*.mobility.constraintAreaMaxX = 600m
*.*.mobility.constraintAreaMaxY = 400m
*.*.mobility.constraintAreaMaxZ = 0m

*.host[*].mobility.initFromDisplayString = false
#*.host[0].mobility.typename = "CircleMobility"
#*.host[0].mobility.speed = 10mps
#*.host[0].mobility.cx = 150m
#*.host[0].mobility.cy = 200m
#*.host[0].mobility.r = 120m
#*.host[0].mobility.startAngle = 180deg
*.host[*].mobility.typename = "StationaryMobility"
*.host[*].mobility.initialX = uniform(0m, 600m) #300m
*.host[*].mobility.initialY = uniform(0m, 400m) #200m
#*.host[2].mobility.typename = "CircleMobility"
#*.host[2].mobility.speed = 13mps
#*.host[2].mobility.cx = 450m
#*.host[2].mobility.cy = 200m
#*.host[2].mobility.r = 120m
#*.host[2].mobility.startAngle = 0deg

*.host[*].wlan[0].typename = "ExtUpperIeee80211Interface"
*.host[*].wlan[0].copyConfiguration = "copyFromExt"
#*.host[0].wlan[0].device = "tap0"
#*.host[0].wlan[0].namespace = "host0"
#*.host[1].wlan[0].device = "tap1"
#*.host[1].wlan[0].namespace = "host1"
#*.host[2].wlan[0].device = "tap2"
#*.host[2].wlan[0].namespace = "host2"
*.host[0].wlan[0].device = "tap0"
*.host[0].wlan[0].namespace = "host0"
*.host[1].wlan[0].device = "tap1"
*.host[1].wlan[0].namespace = "host1"
*.host[2].wlan[0].device = "tap2"
*.host[2].wlan[0].namespace = "host2"
*.host[3].wlan[0].device = "tap3"
*.host[3].wlan[0].namespace = "host3"
*.host[4].wlan[0].device = "tap4"
*.host[4].wlan[0].namespace = "host4"
*.host[5].wlan[0].device = "tap5"
*.host[5].wlan[0].namespace = "host5"
*.host[6].wlan[0].device = "tap6"
*.host[6].wlan[0].namespace = "host6"
*.host[7].wlan[0].device = "tap7"
*.host[7].wlan[0].namespace = "host7"
*.host[8].wlan[0].device = "tap8"
*.host[8].wlan[0].namespace = "host8"
*.host[9].wlan[0].device = "tap9"
*.host[9].wlan[0].namespace = "host9"


#**.host[0].numPcapRecorders = 1
#**.host[0].pcapRecorder[0].pcapFile = "results/host0.pcap"
#**.host[0].pcapRecorder[0].pcapLinkType = 105
#**.host[0].pcapRecorder[0].moduleNamePatterns = "wlan[*]"

[Config Udp]

*.host[0].hasUdp = true
*.host[2].hasUdp = true
#*.host{0,2}.udp.typename = "ExtLowerUdp"
*.host[0].udp.typename = "ExtLowerUdp"
*.host[2].udp.typename = "ExtLowerUdp"

*.host[0].udp.namespace = "host0"
#*.host[1].udp.namespace = "host1"
*.host[2].udp.namespace = "host2"

**.crcMode = "computed"

*.host[2].numApps = 1
*.host[2].app[0].typename = "UdpBasicApp"
*.host[2].app[0].destAddresses = "192.168.2.1"
*.host[2].app[0].localPort = 60000
*.host[2].app[0].destPort = 1000
*.host[2].app[0].messageLength = 1000B
*.host[2].app[0].startTime = 5s
*.host[2].app[0].sendInterval = 10ms

*.host[0].numApps = 1
*.host[0].app[0].typename = "UdpSink"
*.host[0].app[0].localPort = 60000

#*.host[0].app[0].typename = "UdpEchoApp"

*.visualizer.numDataLinkVisualizers = 3
*.visualizer.dataLinkVisualizer[2].displayLinks = true
*.visualizer.dataLinkVisualizer[2].lineColor = "orange"
*.visualizer.dataLinkVisualizer[2].packetFilter = "*Udp*"